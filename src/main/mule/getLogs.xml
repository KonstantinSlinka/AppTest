<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd 
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">
	<flow name="getLogs" >
		<http:listener doc:name="Listener"  config-ref="HTTP_Listener_config" path="/logs" />
		<set-payload doc:name="Set Payload to JSON"  value="#[%dw 2.0&#10;output application/json&#10;---&#10;payload]"/>
		<choice doc:name="Choice"  >
			<when expression='#[payload == ""]'>
				<http:load-static-resource doc:name="Load logs page"  resourceBasePath="#[p('app.home') ++ &quot;//webapp&quot;]" defaultFile="logs.html" />
			</when>
			<otherwise >
				<flow-ref doc:name="logsOutput"  name="logsOutput"/>
			</otherwise>
		</choice>
    </flow>   
	<sub-flow name="logsOutput" >
		<ee:transform doc:name="Set Result, Environments For Analysis, Applications For Analysis">
			<ee:message />
			<ee:variables>
				<ee:set-variable variableName="period"><![CDATA[%dw 2.0
output application/json
var types = payload.timeType splitBy ","
---
types[0] ++ payload.period ++ types[1]]]></ee:set-variable>
				<ee:set-variable variableName="environmentsForAnalysis"><![CDATA[(payload.environments splitBy  ",") default ${environments}]]></ee:set-variable>
				<ee:set-variable variableName="applicationsForAnalysis"><![CDATA[(payload.applications splitBy  ",") default ${applications}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="retrieveToken" name="retrieveToken" />
		<flow-ref doc:name="retrieveOrganizationId" name="retrieveOrganizationId" />
		<flow-ref doc:name="retrieveEnvironments" name="retrieveEnvironments" />
		<set-variable value="#[[]]" doc:name="Set Result" variableName="result" />
		<foreach doc:name="For Each by environments" collection="#[vars.environments filter (item) -&gt; vars.environmentsForAnalysis contains item.name]">
			<flow-ref doc:name="getApplications" name="getApplications" />
			<set-variable value="#[%dw 2.0&#10;output application/json&#10;---&#10;vars.result + vars.environmentApplication]" doc:name="Set Result" variableName="result" />
		</foreach>
		<ee:transform doc:name="Transform Message">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
vars.result]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<parse-template doc:name="Parse Template" location="webapp\logs.html" />
	</sub-flow>
	<sub-flow name="getApplications">
        <ee:transform doc:name="Set currentEnv, currentEnvName, applications"  >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="currentEnv" ><![CDATA[payload.id]]></ee:set-variable>
				<ee:set-variable variableName="currentEnvName" ><![CDATA[payload.name]]></ee:set-variable>
				<ee:set-variable variableName="applications" ><![CDATA[[]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<http:request method="GET" doc:name="HTTPS GET /cloudhub/api/v2/applications" config-ref="HTTPS_FOR_CONNECTING_TO_CLOUDHUB" path="/cloudhub/api/v2/applications" outputMimeType="application/json">
            <http:headers><![CDATA[#[output application/java
---
{
	"X-ANYPNT-ENV-ID" : vars.currentEnv,
	"Authorization" : "Bearer " ++ vars.token as String
}]]]></http:headers>
        </http:request>
        <set-payload value="#[(payload filter (item) -&gt; vars.applicationsForAnalysis contains item.domain) default []]" doc:name="Filter applications"  />
		<foreach doc:name="For Each by applications" collection="#[payload]">
            <flow-ref doc:name="getInstnace" name="getInstnace" />
            <set-variable value="#[%dw 2.0&#xA;output application/json&#xA;---&#xA;vars.applications + vars.applicationInstances]" doc:name="Set Applications" variableName="applications" />
        </foreach>
        <set-variable value="#[%dw 2.0&#xA;output application/json&#xA;---&#xA;{&#xA; &quot;environment&quot;: vars.currentEnvName,&#xA; &quot;applications&quot;: vars.applications&#xA;}]" doc:name="Set EnvironmentApplication" variableName="environmentApplication" />
    </sub-flow>
	<sub-flow name="getInstnace">
        <ee:transform doc:name="Set currentApp, errors"  >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="currentApp" ><![CDATA[payload.domain]]></ee:set-variable>
				<ee:set-variable variableName="errors" ><![CDATA[[]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
        <http:request method="GET" doc:name="HTTPS GET /cloudhub/api/v2/applications/{domain}/deployments" config-ref="HTTPS_FOR_CONNECTING_TO_CLOUDHUB" path="#[&quot;/cloudhub/api/v2/applications/&quot; ++ vars.currentApp ++ &quot;/deployments&quot;]" outputMimeType="application/json">
            <http:headers><![CDATA[#[output application/java
---
{
	"X-ANYPNT-ENV-ID" : vars.currentEnv,
	"Authorization" : "Bearer " ++ vars.token as String
}]]]></http:headers>
        </http:request>
        <foreach doc:name="For Each by instances" collection="#[payload..instanceId]">
            <flow-ref doc:name="getLogsOfSpecificInstance" name="getLogsOfSpecificInstance" />
            <set-variable doc:name="Set Errors" variableName="errors"  value="#[%dw 2.0&#xA;output application/json&#xA;---&#xA;vars.errors ++ payload]" />
        </foreach>
        <set-variable value="#[%dw 2.0&#xA;output application/json&#xA;---&#xA;{&#xA; &quot;application name&quot;: vars.currentApp,&#xA; &quot;countErrors&quot;: sizeOf(vars.errors),&#xA; (if(sizeOf(vars.errors) &gt; 0) (&quot;errors&quot;: vars.errors) else null)&#xA;}]" doc:name="Set ApplicationInstances" variableName="applicationInstances"  />
    </sub-flow>
	<sub-flow name="getLogsOfSpecificInstance">
        <set-variable value="#[payload]" doc:name="Set CurrentInstance" variableName="currentInstance" />
        <http:request method="GET" doc:name="HTTPS GET /cloudhub/api/v2/applications/{domain}/instances/{instance_id}/logs" config-ref="HTTPS_FOR_CONNECTING_TO_CLOUDHUB" path="#[&quot;/cloudhub/api/v2/applications/&quot; ++ vars.currentApp ++ &quot;/instances/&quot; ++ payload ++ &quot;/logs&quot;]" outputMimeType="application/json">
            <http:headers><![CDATA[#[output application/java
---
{
	"X-ANYPNT-ENV-ID" : vars.currentEnv,
	"Authorization" : "Bearer " ++ vars.token as String
}]]]></http:headers>
        </http:request>
        <ee:transform doc:name="Transform Message">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
import * from dw::core::Strings
var errorList = payload.data filter ($.priority == "ERROR")
fun errorParam (error, param) =  substringAfter((error splitBy "\n" filter ($ contains  param))[0],":")
fun toReadableMessage (message) = {"Message" :errorParam(message, "Message "), "ErrorType" : errorParam(message, "Error type "), "event" : errorParam(message, "event")}
var period = vars.period default "P1Y" as Period
var startPeriodNew = now() - (period default now())
fun isFit (endTime) = (endTime default now()) > startPeriodNew
fun convertToDateTime (timestamp) = (timestamp / 1000) as DateTime
---
errorList map ((item) -> {"time" : convertToDateTime(item.timestamp), "description" : toReadableMessage(item.message)}) filter isFit($.time)]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </sub-flow>
</mule>
