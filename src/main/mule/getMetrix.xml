<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd 
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd 
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">
	<flow name="getMetrics" >
		<http:listener doc:name="Listener" config-ref="HTTP_Listener_config" path="/metrics" />
		<set-payload value="#[%dw 2.0&#10;output application/json&#10;---&#10;payload]" doc:name="Set Payload to JSON" />
		<choice doc:name="Choice">
			<when expression='#[payload == ""]'>
				<http:load-static-resource doc:name="Load metrics page" resourceBasePath="#[p('app.home') ++ &quot;//webapp&quot;]" defaultFile="metrics.html" />
			</when>
			<otherwise>
				<flow-ref doc:name="metrixOutputTemp" name="metrixOutput" />
			</otherwise>
		</choice>
	</flow>
	<sub-flow name="metrixOutput">
		<ee:transform doc:name="Set Result, Environments For Analysis, Applications For Analysis">
			<ee:message />
			<ee:variables>
				<ee:set-variable variableName="period"><![CDATA[%dw 2.0
output application/json
var types = payload.timeType
---
payload.period ++ types]]></ee:set-variable>
				<ee:set-variable variableName="environmentsForAnalysis"><![CDATA[(payload.environments splitBy  ",") default ${environments}]]></ee:set-variable>
				<ee:set-variable variableName="applicationsForAnalysis"><![CDATA[(payload.applications splitBy  ",") default ${applications}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="retrieveToken" name="retrieveToken" />
		<flow-ref doc:name="retrieveOrganizationId" name="retrieveOrganizationId" />
		<flow-ref doc:name="retrieveEnvironments" name="retrieveEnvironments" />
		<flow-ref doc:name="retrieveProxyAndDB" name="retrieveProxyAndDB" />
		<set-variable value="#[[]]" doc:name="Set Result" variableName="result" />
		<foreach doc:name="For Each by environments" collection="#[vars.environments filter (item) -&gt; vars.environmentsForAnalysis contains item.name]">
			<flow-ref doc:name="getApplicationsForMetrix" name="getApplicationsForMetrix" />
			<set-variable value="#[%dw 2.0&#10;output application/json&#10;---&#10;vars.result + vars.environmentApplication]" doc:name="Set Result" variableName="result" />
		</foreach>
		<parse-template doc:name="Parse Template" location="webapp\metrics.html" />
	</sub-flow>
	<sub-flow name="getApplicationsForMetrix" >
		<ee:transform doc:name="Set currentEnv, currentEnvName, applications" >
			<ee:message />
			<ee:variables >
				<ee:set-variable variableName="currentEnv" ><![CDATA[payload.id]]></ee:set-variable>
				<ee:set-variable variableName="currentEnvName" ><![CDATA[payload.name]]></ee:set-variable>
				<ee:set-variable variableName="applications" ><![CDATA[[]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<http:request method="GET" doc:name="HTTPS GET /cloudhub/api/v2/applications" config-ref="HTTPS_FOR_CONNECTING_TO_CLOUDHUB" path="/cloudhub/api/v2/applications" outputMimeType="application/json" >
			<http:headers ><![CDATA[#[output application/java
---
{
	"X-ANYPNT-ENV-ID" : vars.currentEnv,
	"Authorization" : "Bearer " ++ vars.token as String
}]]]></http:headers>
		</http:request>
		<set-payload value="#[(payload filter (item) -&gt; vars.applicationsForAnalysis contains item.domain) default []]" doc:name="Filter applications" />
		<foreach doc:name="For Each by applications" collection="#[payload]" >
			<flow-ref doc:name="getIOBoundRequests" name="getIOBoundRequests" />
			<set-variable value="#[%dw 2.0&#10;output application/json&#10;---&#10;vars.applications + vars.IOBoundRequests]" doc:name="Set Applications" variableName="applications" />
		</foreach>
		<set-variable value='#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10; "environment": vars.currentEnvName,&#10; "applications": vars.applications&#10;}]' doc:name="Set EnvironmentApplication" variableName="environmentApplication" />
	</sub-flow>
	<sub-flow name="getIOBoundRequests" >
		<ee:transform doc:name="Set currentApp, currentAppName, inboundRequests">
			<ee:message />
			<ee:variables>
				<ee:set-variable variableName="currentApp"><![CDATA[payload.fullDomain]]></ee:set-variable>
				<ee:set-variable variableName="inboundRequests" ><![CDATA[[]]]></ee:set-variable>
				<ee:set-variable variableName="currentAppName" ><![CDATA[payload.domain	]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<set-variable value='#[output application/java&#10;---&#10;"curl \"https://anypoint.mulesoft.com/monitoring/api/visualizer/api/datasources/proxy/" ++ vars.proxy as String ++ "/query?db=" ++ vars.DB as String ++ "&amp;q=SELECT%20sum(%22avg_request_count%22)%20FROM%20%22app_inbound_metric%22%20WHERE%20(%22org_id%22%20%3D%20%27" ++ vars.org_id as String ++ "%27%20AND%20%22env_id%22%20%3D%20%27" ++ vars.currentEnv as String ++ "%27%20AND%20%22app_id%22%20%3D%20%27" ++ vars.currentApp as String ++ "%27%20AND%20%22endpoint_type%22%20%3D%20%27http%27%20AND%20%22endpoint%22%20!%3D%20%27%27)%20AND%20time%20%3E%3D%20now()%20-%20" ++ vars.period as String ++ "%20GROUP%20BY%20%22endpoint%22%20tz(%27Europe%2FMinsk%27)&amp;epoch=ms\" -H \"Authorization: Bearer " ++ vars.token as String ++ "\" --ssl-no-revoke"]' doc:name="Set Q for inbound requests" variableName="q" />
		<until-successful maxRetries="5" doc:name="Until Successful" millisBetweenRetries="1000">
			<scripting:execute engine="groovy" doc:name="Get inboundRequests">
			<scripting:code><![CDATA[def sout = new StringBuilder(), serr = new StringBuilder()
def curl = vars.q
def proc = curl.execute()

proc.consumeProcessOutput(sout, serr)

proc.waitForOrKill(1000)

def out = sout.toString()

println "$out"

return "$out"]]></scripting:code>
		</scripting:execute>
			<flow-ref doc:name="retryIfEmptyPayload" name="retryIfEmptyPayload"/>
		</until-successful>
		<ee:transform doc:name="Set inboundRequests" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="inboundRes" ><![CDATA[%dw 2.0
output application/json
var inputArray = read(payload default "","application/json").results.series[0]
---
inputArray map ((item) -> {
    "name" : item.tags.endpoint,
    "count": item.values[0][1]
})]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<set-variable value='#[output application/java&#10;---&#10;"curl \"https://anypoint.mulesoft.com/monitoring/api/visualizer/api/datasources/proxy/" ++ vars.proxy as String ++ "/query?db=" ++ vars.DB as String ++ "&amp;q=SELECT%20sum(%22avg_request_count%22)%20FROM%20%22app_outbound_metric%22%20WHERE%20(%22org_id%22%20%3D%20%27" ++ vars.org_id as String ++ "%27%20AND%20%22env_id%22%20%3D%20%27" ++ vars.currentEnv as String ++ "%27%20AND%20%22app_id%22%20%3D%20%27" ++ vars.currentApp as String ++ "%27%20AND%20%22endpoint_type%22%20%3D%20%27http%27%20AND%20%22endpoint%22%20!%3D%20%27%27)%20AND%20time%20%3E%3D%20now()%20-%20" ++ vars.period as String ++ "%20GROUP%20BY%20%22endpoint%22%20tz(%27Europe%2FMinsk%27)&amp;epoch=ms\" -H \"Authorization: Bearer " ++ vars.token as String ++ "\" --ssl-no-revoke"]' doc:name="Set Q for outbound requests" variableName="q" />
		<until-successful maxRetries="5" doc:name="Until Successful1" millisBetweenRetries="1000">
			<scripting:execute engine="groovy" doc:name="Get outboundRequests">
				<scripting:code><![CDATA[def sout = new StringBuilder(), serr = new StringBuilder()
def curl = vars.q
def proc = curl.execute()

proc.consumeProcessOutput(sout, serr)

proc.waitForOrKill(1000)

def out = sout.toString()

println "$out"

return "$out"]]></scripting:code>
			</scripting:execute>
			<flow-ref doc:name="retryIfEmptyPayload" name="retryIfEmptyPayload" />
		</until-successful>
		<ee:transform doc:name="Set outboundRequests">
			<ee:message />
			<ee:variables>
				<ee:set-variable variableName="outboundRes" ><![CDATA[%dw 2.0
output application/json
var inputArray = read(payload default "","application/json").results.series[0]
---
inputArray map ((item) -> {
    "name" : item.tags.endpoint,
    "count": item.values[0][1]
})]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<set-variable value='#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10; "application name": vars.currentAppName,&#10; "inboundRequests": vars.inboundRes,&#10; "outboundRequests" : vars.outboundRes&#10;}]' doc:name="Set ApplicationInstances" variableName="IOBoundRequests" />
	</sub-flow>
	<sub-flow name="retryIfEmptyPayload" >
		<choice doc:name="Choice">
				<when expression='#[payload == ""]'>
					<raise-error doc:name="Raise error" type="CUSTOM:PAYLOAD_IS_EMPTY" />
				</when>
			</choice>
	</sub-flow>
</mule>
