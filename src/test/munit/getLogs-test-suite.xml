<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="getLogs-test-suite.xml" />
	<munit:test name="getLogsTest-NewPage"  description="Test">
		<munit:behavior >
			<munit:set-event doc:name="Set Event"  >
				<munit:payload value='#[""]' />
			</munit:set-event>
			<munit-tools:mock-when doc:name="Mock when"  processor="http:load-static-resource">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Load logs page" attributeName="doc:name" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getLogs"  name="get-logs-flow" doc:id="b3552094-fc4b-4d86-bd27-9a63a94e7feb"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:verify-call doc:name="Verify call"  processor="http:load-static-resource" atLeast="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Load logs page" attributeName="doc:name" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="getLogsTest-GetLogs"  description="Test" >
		<munit:behavior >
			<munit:set-event doc:name="Set Event"  >
				<munit:payload value='#[{&#10;	"data":"some_data"&#10;}]' />
			</munit:set-event>
			<munit-tools:mock-when doc:name="Mock when"  processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="logsOutput" attributeName="doc:name" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getLogs"  name="get-logs-flow" doc:id="0b05b51c-dc40-4a46-84ea-2d01176a7dad"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:verify-call doc:name="Verify call"  processor="flow-ref" atLeast="1" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="logsOutput" attributeName="doc:name" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="logsOutputTest"  description="Test">
		<munit:behavior>
			<munit:set-event doc:name="Set Event" >
				<munit:payload value='#[{&#10;	"environments": "some_envName",&#10;    "applications": "some_domain",&#10;    "period": "1",&#10;    "timeType": "PT,H"   &#10;}]' />
				<munit:variables >
					<munit:variable key="applicationsForAnalysis" value='#[ ["some_domain"] ]' />
					<munit:variable key="currentEnvName" value="some_curEnvName" />
				</munit:variables>
			</munit:set-event>
			<munit-tools:mock-when doc:name="token"  processor="os:retrieve">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="token" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload value='#["some_token"]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="organizationId"  processor="os:retrieve">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="organizationId" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload value='#["some_orgId"]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="environments"  processor="os:retrieve">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="environments" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload value='#[[&#10;	{&#10;    	"id": "some_envId",&#10;        "name": "some_envName",&#10;    }&#10;]]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Applications Req"  processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="HTTPS GET /cloudhub/api/v2/applications" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload value='#[[{&#10;	"domain":"some_domain",&#10;	"fullDomain":"some_fullDomain"&#10;}]]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Inctanse Req"  processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="HTTPS GET /cloudhub/api/v2/applications/{domain}/deployments" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[{&#10;    "data": [&#10;        {&#10;            "instances": [&#10;                {&#10;                    "instanceId": "some_instanceId"&#10;                }&#10;            ]&#10;        }&#10;    ]&#10;}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Logs Req"  processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="HTTPS GET /cloudhub/api/v2/applications/{domain}/instances/{instance_id}/logs" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[{&#10;    "data": [&#10;        {&#10;            "timestamp": 1679661364517,&#10;            "message": "event:some event id \nMessage               : CUSTOM: SOME ERROR MESSAGE: Message.\nError type            : CUSTOM:SOME_ERROR_TYPE",&#10;            "priority": "ERROR",&#10;            "instanceId": "641d98ca916ab75054dc4707-0"&#10;        }&#10;    ]&#10;}]' mediaType="application/java" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution>
			<flow-ref doc:name="Flow-ref to logsOutput"  name="logs-output" doc:id="1b61da09-f398-4482-95a4-b46703c7c230"/>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-equals doc:name="Assert equals"  actual="#[vars.result]" expected='#[[&#10;  {&#10;    "environment": "some_envName",&#10;    "applications": [&#10;      {&#10;        "application name": "some_domain",&#10;        "countErrors": 0&#10;      }&#10;    ]&#10;  }&#10;]]' />
		</munit:validation>
	</munit:test>
</mule>
