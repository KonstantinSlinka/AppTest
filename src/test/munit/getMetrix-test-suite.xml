<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="getMetrix-test-suite.xml" />
	<munit:test name="getMetrixTest-NewPage"  description="Test" >
		<munit:behavior >
			<munit:set-event doc:name="Set Event"  >
				<munit:payload value='#[""]' />
			</munit:set-event>
			<munit-tools:mock-when doc:name="Mock when"  processor="http:load-static-resource" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Load metrics page" attributeName="doc:name" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getMetrix"  name="get-metrix-flow" doc:id="363a8077-9dcd-4161-af5f-02f3c2699683"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:verify-call doc:name="Verify call"  processor="http:load-static-resource" atLeast="1" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Load metrics page" attributeName="doc:name" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="getMetrixTest-GetLogs"  description="Test" >
		<munit:behavior >
			<munit:set-event doc:name="Set Event"  >
				<munit:payload value='#[{&#10;	"data":"some_data"&#10;}]' />
			</munit:set-event>
			<munit-tools:mock-when doc:name="Mock when"  processor="flow-ref" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="metrixOutput" attributeName="doc:name" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getMetrix"  name="get-metrix-flow" doc:id="3530a10f-6b41-4580-b286-bb7cffce2422"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:verify-call doc:name="Verify call"  processor="flow-ref" atLeast="1" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="metrixOutput" attributeName="doc:name" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="metrixOutputTest"  description="Test" >
		<munit:behavior >
			<munit:set-event doc:name="Set Event"  >
				<munit:payload value='#[{&#10;	"environments": "some_envName",&#10;    "applications": "some_domain",&#10;    "period": "1",&#10;    "timeType": "h"   &#10;}]' />
				<munit:variables >
					<munit:variable key="applicationsForAnalysis" value='#[ ["some_domain"] ]' />
					<munit:variable key="currentEnvName" value="some_curEnvName" />
				</munit:variables>
			</munit:set-event>
			<munit-tools:mock-when doc:name="token"  processor="os:retrieve" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="token" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#["some_token"]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="organizationId"  processor="os:retrieve" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="organizationId" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#["some_orgId"]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="environments"  processor="os:retrieve" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="environments" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[[&#10;	{&#10;    	"id": "some_envId",&#10;        "name": "some_envName",&#10;    }&#10;]]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="DB"  processor="os:retrieve" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="DB" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#["\"some_DB\""]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="proxy"  processor="os:retrieve" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="proxy" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#["some_proxy"]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="applications"  processor="os:retrieve" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="applications" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[[{&#10;	"domain":"some_domain",&#10;	"fullDomain":"some_fullDomain"&#10;}]]' />
				</munit-tools:then-return>
			
</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock inbound"  processor="scripting:execute" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Get inboundRequests" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#["{\"results\":[{\"statement_id\":0,\"series\":[{\"name\":\"app_inbound_metric\",\"tags\":{\"endpoint\":\"/test\"},\"columns\":[\"time\",\"sum\"],\"values\":[[1678802995382,8]]}]}]}"]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock outbound"  processor="scripting:execute" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Get outboundRequests" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#["{\"results\":[{\"statement_id\":0}]}"]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to metrixOutput"  name="metrix-output" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals"  actual="#[vars.result]" expected='#[[&#10;	{&#10;	"environment":"some_envName",&#10;	"applications":[&#10;		{&#10;		"application name": "some_domain",&#10;		"inboundRequests": [&#10;			{&#10;			"name": "/test",&#10;			"count": 8&#10;			}&#10;		],&#10;		"outboundRequests": null&#10;		}	&#10;		]&#10;	}	&#10;]]' />
		</munit:validation>
	</munit:test>

</mule>
